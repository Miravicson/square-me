// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v5.29.3
// source: proto/wallet.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';

export interface BuyForexRequest {
  userId: string;
  baseCurrency: string;
  amount: string;
  targetCurrency: string;
}

export interface BuyForexResponse {
  success: boolean;
  message: string;
}

export interface GetWalletBalanceRequest {
  userId: string;
  walletCurrency: string;
}

export interface GetWalletBalanceResponse {
  userId: string;
  walletId: string;
  currency: string;
  amount: string;
}

export interface WalletServiceClient {
  buyForex(request: BuyForexRequest): Observable<BuyForexResponse>;

  getWalletBalance(
    request: GetWalletBalanceRequest
  ): Observable<GetWalletBalanceResponse>;
}

export interface WalletServiceController {
  buyForex(
    request: BuyForexRequest
  ):
    | Promise<BuyForexResponse>
    | Observable<BuyForexResponse>
    | BuyForexResponse;

  getWalletBalance(
    request: GetWalletBalanceRequest
  ):
    | Promise<GetWalletBalanceResponse>
    | Observable<GetWalletBalanceResponse>
    | GetWalletBalanceResponse;
}

export function WalletServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['buyForex', 'getWalletBalance'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method
      );
      GrpcMethod('WalletService', method)(
        constructor.prototype[method],
        method,
        descriptor
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method
      );
      GrpcStreamMethod('WalletService', method)(
        constructor.prototype[method],
        method,
        descriptor
      );
    }
  };
}

export const WALLET_SERVICE_NAME = 'WalletService';
